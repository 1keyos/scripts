# Main GRUB config

# Load any and all video drivers.
# Required under UEFI to boot Linux with a working console.
insmod all_video

# Default menuentry id and boot timeout
set default="coreos"
set timeout=1

# Default kernel args for root filesystem and console.
set linux_root="root=LABEL=ROOT"
set linux_console=""

# Anything else the OEM adds should use this variable.
set linux_append=""


# Search for the OEM partition, load additional configuration if found.
search --no-floppy --set oem --label OEM --hint "$root"
if [ -n "$oem" -a -f "($oem)/grub.cfg" ]; then
    source "($oem)/grub.cfg"
fi

# If no specific console has been set by the OEM then select based on
# platform, most systems use vga text as primary and ttyS0 as secondary.
if [ -z "$linux_console" ]; then
    if [ "$grub_platform" = pc ]; then
        set linux_console="console=ttyS0,115200n8 console=tty0"
        serial com0 --speed=115200 --word=8 --parity=no
        terminal_input console serial_com0
        terminal_output console serial_com0
    elif [ "$grub_platform" = efi ]; then
        set linux_console="console=ttyS0,115200n8 console=tty0"
    elif [ "$grub_platform" = xen ]; then
        set linux_console="console=hvc0"
    fi
fi


# Load a kernel and boot! $root must point at USR-A or USR-B
function load_coreos {
    # UEFI uses linuxefi/initrdefi instead of linux/initrd
    if [ "$grub_platform" = efi ]; then
        set suf="efi"
    else
        set suf=""
    fi

    echo "Loading ($root)/boot/vmlinuz"
    linux$suf /boot/vmlinuz $linux_console $linux_root "$@" $linux_append

    if [ -f /boot/initrd ]; then
        echo "Loading ($root)/boot/initrd"
        initrd$suf /boot/initrd
    fi

    echo "Booting CoreOS!"
}

menuentry "CoreOS default" --id=coreos {
    gptprio.next -d root -u usr_uuid
    load_coreos mount.usr=PARTUUID=$usr_uuid
}

menuentry "CoreOS USR-A" --id=coreos-a {
    search --no-floppy --set root --part-label USR-A --hint "$root"
    load_coreos mount.usr=PARTLABEL=USR-A
}

menuentry "CoreOS USR-B" --id=coreos-b {
    search --no-floppy --set root --part-label USR-B --hint "$root"
    load_coreos mount.usr=PARTLABEL=USR-B
}
